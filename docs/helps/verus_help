Usage: /home/yizhou7/verus/source/target-verus/release/rust_verify INPUT [options]

Options:
        --version       Print version information (add `--output-json` to
                        print as json)
        --export CRATENAME=PATH
                        Export Verus metadata for library crate
        --import CRATENAME=PATH
                        Import Verus metadata from library crate
        --verify-root   Verify just the root module of crate
        --verify-module MODULE
                        Verify just one submodule within crate (e.g. 'foo' or
                        'foo::bar'), can be repeated to verify only certain
                        modules
        --verify-function MODULE
                        Verify just one function within the one module
                        specified by verify-module or verify-root,
                        matches on unique substring (foo) or wildcards at ends
                        of the argument (*foo, foo*, *foo*)
        --no-external-by-default 
                        (deprecated) Verify all items, even those declared
                        outside the verus! macro, and even if they aren't
                        marked #[verifier::verify]
        --no-verify     Do not run verification
        --no-lifetime   Do not run lifetime checking on proofs
        --no-auto-recommends-check 
                        Do not automatically check recommends after
                        verification failures
        --time          Measure and report time taken
        --time-expanded 
                        Measure and report time taken with module breakdown
        --output-json   Emit verification results and timing as json
        --rlimit FLOAT  Set SMT resource limit (roughly in seconds). Default:
                        10.
        --smt-option OPTION=VALUE
                        Set an SMT option (e.g. smt.random_seed=7)
        --multiple-errors INTEGER
                        If 0, look for at most one error per function; if > 0,
                        always find first error in function and make extra
                        queries to find more errors (default: 2)
        --no-vstd       Do not load or link against the vstd library
        --expand-errors 
                        When the proof fails, try to minimize the failing
                        predicate
        --log-dir DIRECTORY_NAME
                        Set directory for log file generation (default:
                        .verus-log)
        --log-all       Log everything
        --log OPTION=VALUE
                        Log selected items:
                        --log vir : Log VIR
                        --log vir-simple : Log simplified VIR
                        --log vir-poly : Log poly VIR
                        --log vir-option : Set VIR logging option (e.g. `--log
                        vir-option=no_span+no_type`. Available options:
                        `compact` `no_span` `no_type` `no_encoding`
                        `no_fn_details`) (default: verbose)
                        --log lifetime : Log lifetime checking for --erasure
                        macro
                        --log interpreter : Log assert_by_compute's
                        interpreter progress
                        --log air : Log AIR queries in initial form
                        --log air-final : Log AIR queries in final form
                        --log smt : Log SMT queries
                        --log triggers : Log automatically chosen triggers
        --triggers-silent 
                        Do not show automatically chosen triggers
        --triggers-selective 
                        Show automatically chosen triggers for some
                        potentially ambiguous cases in verified modules (this
                        is the default behavior)
        --triggers      Show all automatically chosen triggers for verified
                        modules
        --triggers-verbose 
                        Show all automatically chosen triggers for verified
                 Usage: /home/yizhou7/verus/source/target-verus/release/rust_verify INPUT [options]

Options:
        --version       Print version information (add `--output-json` to
                        print as json)
        --export CRATENAME=PATH
                        Export Verus metadata for library crate
        --import CRATENAME=PATH
                        Import Verus metadata from library crate
        --verify-root   Verify just the root module of crate
        --verify-module MODULE
                        Verify just one submodule within crate (e.g. 'foo' or
                        'foo::bar'), can be repeated to verify only certain
                        modules
        --verify-function MODULE
                        Verify just one function within the one module
                        specified by verify-module or verify-root,
                        matches on unique substring (foo) or wildcards at ends
                        of the argument (*foo, foo*, *foo*)
        --no-external-by-default 
                        (deprecated) Verify all items, even those declared
                        outside the verus! macro, and even if they aren't
                        marked #[verifier::verify]
        --no-verify     Do not run verification
        --no-lifetime   Do not run lifetime checking on proofs
        --no-auto-recommends-check 
                        Do not automatically check recommends after
                        verification failures
        --time          Measure and report time taken
        --time-expanded 
                        Measure and report time taken with module breakdown
        --output-json   Emit verification results and timing as json
        --rlimit FLOAT  Set SMT resource limit (roughly in seconds). Default:
                        10.
        --smt-option OPTION=VALUE
                        Set an SMT option (e.g. smt.random_seed=7)
        --multiple-errors INTEGER
                        If 0, look for at most one error per function; if > 0,
                        always find first error in function and make extra
                        queries to find more errors (default: 2)
        --no-vstd       Do not load or link against the vstd library
        --expand-errors 
                        When the proof fails, try to minimize the failing
                        predicate
        --log-dir DIRECTORY_NAME
                        Set directory for log file generation (default:
                        .verus-log)
        --log-all       Log everything
        --log OPTION=VALUE
                        Log selected items:
                        --log vir : Log VIR
                        --log vir-simple : Log simplified VIR
                        --log vir-poly : Log poly VIR
                        --log vir-option : Set VIR logging option (e.g. `--log
                        vir-option=no_span+no_type`. Available options:
                        `compact` `no_span` `no_type` `no_encoding`
                        `no_fn_details`) (default: verbose)
                        --log lifetime : Log lifetime checking for --erasure
                        macro
                        --log interpreter : Log assert_by_compute's
                        interpreter progress
                        --log air : Log AIR queries in initial form
                        --log air-final : Log AIR queries in final form
                        --log smt : Log SMT queries
                        --log triggers : Log automatically chosen triggers
        --triggers-silent 
                        Do not show automatically chosen triggers
        --triggers-selective 
                        Show automatically chosen triggers for some
                        potentially ambiguous cases in verified modules (this
                        is the default behavior)
        --triggers      Show all automatically chosen triggers for verified
                        modules
        --triggers-verbose 
                        Show all automatically chosen triggers for verified
                        modules and imported definitions from other modules
        --profile       Collect and report prover performance data when
                        resource limits are hit
        --profile-all   Always collect and report prover performance data
        --compile       Run Rustc compiler after verification
        --num-threads INTEGER
                        Number of threads to use for verification. Default: 7
                        (available parallelism on this system).
        --trace         Print progress information
        --no-report-long-running 
                        Suppress notes and progress bars for functions that
                        take a while to verify
    -h, --help          print this help menu
        --record        Rerun verus and package source files of the current
                        crate to the current directory, alongside with output
                        and version information. The file will be named
                        YYYY-MM-DD-HH-MM-SS.zip. If you are reporting an
                        error, please keep the original arguments in addition
                        to this flag
    -V OPTION[=VALUE]   Extended/experimental options:
                        -V ignore-unexpected-smt : Ignore unexpected SMT
                        output
                        -V debug : Enable debugging of proof failures
                        -V no-solver-version-check : Skip the check that the
                        solver has the expected version (useful to experiment
                        with different versions of z3)
                        -V spinoff-all : Always spinoff individual functions
                        to separate z3 instances
                        -V capture-profiles : Always collect prover
                        performance data, but don't generate output reports
                        -V use-internal-profiler : Use an internal profiler
                        that shows internal quantifier instantiations
       modules and imported definitions from other modules
        --profile       Collect and report prover performance data when
                        resource limits are hit
        --profile-all   Always collect and report prover performance data
        --compile       Run Rustc compiler after verification
        --num-threads INTEGER
                        Number of threads to use for verification. Default: 7
                        (available parallelism on this system).
        --trace         Print progress information
        --no-report-long-running 
                        Suppress notes and progress bars for functions that
                        take a while to verify
    -h, --help          print this help menu
        --record        Rerun verus and package source files of the current
                        crate to the current directory, alongside with output
                        and version information. The file will be named
                        YYYY-MM-DD-HH-MM-SS.zip. If you are reporting an
                        error, please keep the original arguments in addition
                        to this flag
    -V OPTION[=VALUE]   Extended/experimental options:
                        -V ignore-unexpected-smt : Ignore unexpected SMT
                        output
                        -V debug : Enable debugging of proof failures
                        -V no-solver-version-check : Skip the check that the
                        solver has the expected version (useful to experiment
                        with different versions of z3)
                        -V spinoff-all : Always spinoff individual functions
                        to separate z3 instances
                        -V capture-profiles : Always collect prover
                        performance data, but don't generate output reports
                        -V use-internal-profiler : Use an internal profiler
                        that shows internal quantifier instantiations
